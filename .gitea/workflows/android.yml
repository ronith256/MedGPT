name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  ANDROID_HOME: ${{ github.workspace }}/android/sdk

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download and unzip ARM64 Android CI files
        run: |
          curl -LO https://github.com/ronith256/ARM64-Android-CI-CD/releases/download/33/armBuild33.zip
          unzip -q armBuild33.zip          

      - name: Set up Android SDK
        run: |
          echo -e "\nsdk.dir=$ANDROID_HOME" >> local.properties
          echo -e "\nandroid.aapt2FromMavenOverride=$ANDROID_HOME/build-tools/33.0.3/aapt2" >> gradle.properties          

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
          java-home: /usr/lib/jvm/java-11-openjdk-arm64

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Accept Android SDK licenses
        run: echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_HOME
      - name: Convert base64-encoded keystore to JKS
        run: |
          echo "${{ secrets.KEY_STORE }}" | base64 --decode > keystore.jks
      - name: Build and sign APK
        run: |
          ./gradlew assembleRelease
          chmod +x $ANDROID_HOME/build-tools/33.0.3/apksigner
          $ANDROID_HOME/build-tools/33.0.3/apksigner sign --ks keystore.jks --ks-key-alias ${{ secrets.ALIAS }} --ks-pass pass:${{ secrets.KEYSTOREPASSWORD }} --key-pass pass:${{ secrets.KEYPASSWORD }} --out app/build/outputs/apk/release/app-release-signed.apk app/build/outputs/apk/release/app-release-unsigned.apk
      - name: Upload APK as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release-signed.apk